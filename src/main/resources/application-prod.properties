# Production Profile - PostgreSQL Database
spring.profiles.active=prod

# Database Configuration (PostgreSQL)
spring.datasource.url=jdbc:postgresql://localhost:5432/bakery_prod
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=bakery_user
spring.datasource.password=${BAKERY_DB_PASSWORD:changeme}

# Connection Pooling (HikariCP)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.pool-name=BakeryPool

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.defer-datasource-initialization=false

# Data Initialization
spring.sql.init.mode=never

# Logging
logging.level.com.pw.bakery.flow=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.springframework.web=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=logs/bakery-flow-manager.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=30

# Production Settings
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false

# Security
server.ssl.enabled=true
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD:changeme}
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=bakery

# Application Info
info.app.name=Bakery Flow Manager
info.app.version=0.0.1-SNAPSHOT
info.app.description=Production environment for bakery workflow management
info.app.environment=Production

# Health Checks
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Metrics
management.endpoint.metrics.enabled=true
management.metrics.export.prometheus.enabled=true
